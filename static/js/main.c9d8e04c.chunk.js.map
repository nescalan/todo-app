{"version":3,"sources":["TodoContext/index.js","TodoContext/UseLocalStorage.js","TodoCounter/TodoCounter.js","TodoSearch/TodoSearch.js","TodoList/TodoList.js","TodoItem/TodoItem.js","CreateTodoButton/CreateTodoButton.js","Modal/Modal.js","App/AppUI.js","App/App.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","loading","setLoading","item","setItem","setError","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","error","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodos","todoIndex","findIndex","newTodos","deleteTodo","splice","children","TodoCounter","useContext","Fragment","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","AppUI","completeTodo","map","App","render"],"mappings":"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","file":"static/js/main.c9d8e04c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useLocalStorage } from \"./UseLocalStorage\";\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  // Estados de la Aplicacion\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage(\"TODOS_V1\", []);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      const textLocated = todoText.includes(searchText);\n      return textLocated;\n    });\n  }\n\n  const completeTodos = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    // Copiamos el estado para trabajar sobre la copia de newTodos\n    const newTodos = [...todos];\n    // Cambiamos la propiedad \"completed\" a true\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodos,\n        deleteTodo,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\nexport { TodoContext, TodoProvider };\n","import { useState, useEffect } from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n  // Simulacion de una API\n  const [loading, setLoading] = useState(true);\n\n  // Estado de los Todo's\n  const [item, setItem] = useState(initialValue);\n\n  // Estado para manejar el error en la carga\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      try {\n        // Guardo los Todos en LocalStorage con la version 1.0\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        if (!localStorageItem) {\n          // Cuando localStorageItem está vacío seteamos el localStorage con un arreglo vacío\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          // asignamos a la variable parsedItem un arreglo vacío\n          parsedItem = initialValue;\n        } else {\n          // Transformamos localStorageItem de nuevo a JSON\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    }, 2000);\n  });\n\n  //Funcion para actualizar el estado y el localStorage\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  // Cuando retornamos mas de dos estados es mejor hacerlo como un objeto\n  return { item, saveItem, loading };\n}\n\nexport { useLocalStorage };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoCounter.css\";\n\nfunction TodoCounter() {\n  const { completedTodos, totalTodos } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <h2 className=\"TodoCounter\">\n        Has completado {completedTodos} de {totalTodos} TODOs\n      </h2>\n    </React.Fragment>\n  );\n}\n\nexport { TodoCounter };\n","import React, { useContext } from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport \"./TodoSearch.css\";\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(searchValue);\n    setSearchValue(event.target.value);\n  };\n  return (\n    <input\n      className=\"TodoSearch\"\n      placeholder=\"Cebolla\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n    />\n  );\n}\n\nexport { TodoSearch };\n","import React from \"react\";\nimport \"./TodoList.css\";\n\nfunction TodoList({ children }) {\n  return (\n    <section>\n      <ul>{children}</ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from \"react\";\nimport \"./TodoItem.css\";\n\nfunction TodoItem(props) {\n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && \"Icon-check--active\"}`}\n        onClick={props.onComplete}\n      >\n        √\n      </span>\n      <p className={`TodoItem-p ${props.completed && \"TodoItem-p--complete\"}`}>\n        {props.text}\n      </p>\n      <span className=\"Icon Icon-delete\" onClick={props.onDelete}>\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from \"react\";\nimport \"./CreateTodoButton.css\";\n\nfunction CreateTodoButton(props) {\n  const onClickButton = () => {\n    props.setOpenModal((prevState) => !prevState);\n  };\n\n  return (\n    <button className=\"CreateTodoButton\" onClick={onClickButton}>\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Modal.css\";\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(\n    <div className=\"ModalBackground\">{children}</div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport { Modal };\n","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport { TodoCounter } from \"../TodoCounter/TodoCounter\";\nimport { TodoSearch } from \"../TodoSearch/TodoSearch\";\nimport { TodoList } from \"../TodoList/TodoList\";\nimport { TodoItem } from \"../TodoItem/TodoItem\";\nimport { CreateTodoButton } from \"../CreateTodoButton/CreateTodoButton\";\nimport { Modal } from \"../Modal/Modal\";\n\nfunction AppUI() {\n  const {\n    error,\n    loading,\n    searchedTodos,\n    completeTodo,\n    deleteTodo,\n    openModal,\n    setOpenModal,\n  } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n\n      <TodoList>\n        {error && <p>Desespérate, hubo un error...</p>}\n        {loading && <p>Estamos cargando, no desesperes...</p>}\n        {!loading && !searchedTodos.length && <p>¡Crea tu primer TODO!</p>}\n\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <p>{searchedTodos[0]?.text}</p>\n        </Modal>\n      )}\n\n      <CreateTodoButton setOpenModal={setOpenModal} />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","import React from \"react\";\nimport { TodoProvider } from \"../TodoContext\";\nimport { AppUI } from \"./AppUI\";\n\n// const defaultTodos = [\n//   { text: \"Viernes de Películas\", completed: true },\n//   { text: \"Tomar el cursso de intro a React\", completed: true },\n//   { text: \"Llorar con la llorona\", completed: false },\n//   { text: \"LALALALAA\", completed: false },\n// ];\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/App.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}